-- Schema definition for Mokkoji calendar and event management
-- Designed for multi-platform calendar sync with local-first approach
-- Supports RRULE-based recurring events with timezone handling

CREATE TABLE calendars (
  id TEXT NOT NULL PRIMARY KEY,
  display_name TEXT NOT NULL,
  source_platform TEXT, -- 'google', 'outlook', 'apple', 'local'
  external_calendar_id TEXT, -- original ID from external provider
  tz TEXT NOT NULL DEFAULT 'Asia/Seoul',
  created_at INTEGER NOT NULL DEFAULT (strftime('%s', 'now')),
  updated_at INTEGER NOT NULL DEFAULT (strftime('%s', 'now'))
);

CREATE TABLE events (
  id TEXT NOT NULL PRIMARY KEY,
  calendar_id TEXT NOT NULL REFERENCES calendars(id) ON DELETE CASCADE,
  external_event_id TEXT, -- original ID from external provider
  title TEXT NOT NULL,
  description TEXT,
  start_utc INTEGER NOT NULL, -- Unix timestamp in UTC
  end_utc INTEGER NOT NULL, -- Unix timestamp in UTC
  all_day INTEGER NOT NULL DEFAULT 0, -- boolean: 1 for all-day events
  location TEXT,
  recurrence_rule TEXT, -- RRULE string (RFC 5545 format)
  external_updated_at INTEGER, -- last update timestamp from external source
  external_version TEXT, -- version/etag from external source
  deleted INTEGER NOT NULL DEFAULT 0, -- soft delete flag
  last_modified_local INTEGER NOT NULL DEFAULT (strftime('%s', 'now')),
  sync_status TEXT NOT NULL DEFAULT 'synced' -- 'synced', 'pending', 'failed'
);

CREATE TABLE event_overrides (
  id TEXT NOT NULL PRIMARY KEY,
  event_id TEXT NOT NULL REFERENCES events(id) ON DELETE CASCADE,
  occurrence_date TEXT NOT NULL, -- YYYY-MM-DD format for the original occurrence
  override_type TEXT NOT NULL DEFAULT 'modification', -- 'modification', 'deletion'
  title TEXT, -- override title (null = use original)
  description TEXT, -- override description (null = use original)
  start_utc INTEGER, -- override start time (null = use original)
  end_utc INTEGER, -- override end time (null = use original)
  location TEXT, -- override location (null = use original)
  created_at INTEGER NOT NULL DEFAULT (strftime('%s', 'now'))
);

CREATE TABLE attendees (
  id TEXT NOT NULL PRIMARY KEY,
  event_id TEXT NOT NULL REFERENCES events(id) ON DELETE CASCADE,
  email TEXT,
  display_name TEXT,
  response_status TEXT DEFAULT 'needsAction', -- 'accepted', 'declined', 'tentative', 'needsAction'
  is_organizer INTEGER NOT NULL DEFAULT 0,
  created_at INTEGER NOT NULL DEFAULT (strftime('%s', 'now'))
);

-- Indexes for performance optimization
CREATE INDEX idx_events_calendar_start ON events(calendar_id, start_utc);
CREATE INDEX idx_events_deleted ON events(deleted);
CREATE INDEX idx_events_sync_status ON events(sync_status);
CREATE INDEX idx_events_recurrence ON events(recurrence_rule) WHERE recurrence_rule IS NOT NULL;
CREATE INDEX idx_event_overrides_event_date ON event_overrides(event_id, occurrence_date);
CREATE INDEX idx_attendees_event ON attendees(event_id);

-- Test acceptance criteria:
-- 1. All tables should be created without errors
-- 2. Foreign key constraints should be properly established
-- 3. Indexes should improve query performance for date ranges and calendar filtering
-- 4. Schema should support both one-time and recurring events with timezone handling